struct "point" is used to keep track of the x, y position and the height at that point.

the main method calls stat1()

stat1() takes in standard input witch is expected to be a set of 3 doubles, the first two are the x and y values of the center of a grid square, the third value is the height of that square.
stat1() then takes the first value and sets it as the high point and low point, then it reads all the other points,
if it finds a point higher then the current high point that new point becomes the new high point. the same thing happens with the low point if the new point is lower.

pointcloud.c

	imagePointCloud(List* l,int width, char* filename) reads a list of points then prints out a gif file according to the height of the points

	pointcloud_t* readPointCloudData(FILE* stream) reads the points from a file and sets them into a list

	int initializeWatershed(pointcloud_t* pc)  sets up the pointers for each point so it can move water correctly

	void watershedAddUniformWater(pointcloud_t* pc, float amount)  adds the same amount of water for each point

	void watershedStep(pointcloud_t* pc) calculates and sets the new water value at any given point

	double helper(double wcoef,double t1, double t2, double w1, double w2) this is used by watershepStep to make calulations easier to change and to read

	void imagePointCloudWater(pointcloud_t* pc, double maxwd, char* filename) simper to imagePointCloud but this shades the map blue based on how deep the water is at that location

Util.h
	Stats struct: keeps tract of the height of the highest point and the height of the lowest point, works similer to java ArrayList
	List struct: ceates an array of some arbitrary data, of some Maximum data size. 

Util.c
	allocateArray(int rows, int columns) crates and then points to a 2D array of doubles.
	ListInit(List* l, int max_elmt_size) inichalizes a new list with some Max_elmt_size
	listAddEnd(List* l, void* elmt) adds a new element to the end of a List and if the List runs out of size, the size doubles.
	listGet(List* l, int index) returns a pointer to the data at some arbitrary point

watershed.c
	the main method takes in a set of arguments after the file has been made so it ceates a set of .gif images that show the water at each point


